cabal-version: 2.2
name:          streaming-benchmarks
category:      Benchmark
version:       0.2.0
license:       MIT
license-file:  LICENSE
author:        Harendra Kumar
maintainer:    Harendra Kumar
stability:     provisional
homepage:      http://github.com/composewell/streaming-benchmarks
bug-reports:   http://github.com/composewell/streaming-benchmarks/issues
copyright:     Copyright (c) 2017 Harendra Kumar
synopsis:      Benchmarks to compare streaming packages
description:
  Benchmarks along with with pretty comparative graph generation for streaming
  operations and their comparisons across notable Haskell streaming libraries
  including `streamly`, `vector`, `streaming`, `machines`, `pipes`, and
  `conduit`.
  <http://hackage.haskell.org/package/streamly streamly> is a blazing fast
  streaming library with native, high level, declarative and composable
  concurrency, it is the primary motivation for these benchmarks.
  .
  If you are using @stack@ then you can just use @./bench.sh@ to run the
  benchmarks; use @--graphs@ option to generate the charts; charts will be
  generated in the `charts` directory. Use @./bench.sh --help@ for all script
  options.
  .
  With any build tool, run the benchmarks with @--csv=results.csv@ as arguments
  (you can pass any @gauge@ arguments when running benchmarks) and then use
  @makecharts results.csv "streamly,vector,..." True False False@ to create the
  charts.  The second argument to @makecharts@ is the list of package names,
  the rest of the args control whether to generate graphs, whether to show diff
  when comparing packages and whether to show versions of the packages in the
  reports.
  .
  See the README file shipped with the package or
  <https://github.com/composewell/streaming-benchmarks in the github repo>
  for more details. The github repo also shows the latest comparative graphs.

tested-with: GHC==8.2.2, GHC==8.4.3
build-type:    Simple
extra-source-files:
  Changelog.md
  bench.sh
  README.rst
  licenses/Readme.txt
  licenses/LICENSE.machines
  stack-8.2.yaml
  stack.yaml
  stack-pedantic.yaml

source-repository head
  type: git
  location: git://github.com/composewell/streaming-benchmarks.git

common common-deps
  build-depends:    base    == 4.*
                  , deepseq >= 1.4.0 && < 1.5
                  , gauge   >= 0.2.3 && < 0.3
                  , random  >= 1.0   && < 2.0
  hs-source-dirs:   .
  other-modules:    Benchmarks.Common

library streaming-benchmarks-indef
  import: common-deps
  default-language: Haskell2010
  signatures:       Stream
  exposed-modules:  StreamBenchmark
  hs-source-dirs:   streaming-benchmarks-indef

library stream-vector
  default-language: Haskell2010
  build-depends:    base   == 4.*
                  , vector >= 0.12  && < 0.13
  exposed-modules:  StrVector
  hs-source-dirs:   stream-vector

library stream-streamly
  default-language: Haskell2010
  build-depends:    base   == 4.*
                  , streamly >= 0.2.1 && < 0.7
  exposed-modules:  StrStreamly
  hs-source-dirs:   stream-streamly

library stream-streaming
  default-language: Haskell2010
  build-depends:    base   == 4.*
                  , streaming >= 0.1.4 && < 0.3,
  exposed-modules:  StrStreaming
  hs-source-dirs:   stream-streaming
library list-benchmarks-indef
  import: common-deps
  default-language: Haskell2010
  signatures:       List
  exposed-modules:  ListBenchmark
  hs-source-dirs:   list-benchmarks-indef

library list-streamly
  default-language: Haskell2010
  build-depends:    base   == 4.*
                  , streamly >= 0.2.1 && < 0.7
  exposed-modules:  ListStreamly
  hs-source-dirs:   list-streamly

library list-vector
  default-language: Haskell2010
  build-depends:    base   == 4.*
                  , vector >= 0.12  && < 0.13
  exposed-modules:  ListVector
  hs-source-dirs:   list-vector

library list-prelude
  default-language: Haskell2010
  build-depends:    base == 4.*
  exposed-modules:  ListPrelude
  hs-source-dirs:   list-prelude

library list-sequence
  default-language: Haskell2010
  build-depends:    base   == 4.*
                  , containers >= 0.5   && < 0.7
  exposed-modules:  ListSequence
  hs-source-dirs:   list-sequence

benchmark benchmarks
  import: common-deps
  default-language: Haskell2010
  type:             exitcode-stdio-1.0
  main-is:          Benchmarks.hs
  other-modules:    Benchmarks.BenchTH
                  , Benchmarks.BenchmarkTH

                  -- Pure streams
                  , Benchmarks.DList
                  , Benchmarks.ByteString
                  , Benchmarks.ByteStringLazy
                  , Benchmarks.Text

                  -- Monadic streams
                  , Benchmarks.Conduit
                  , Benchmarks.Pipes
                  , Benchmarks.Machines
                  , Benchmarks.Drinkery

                -- List transformers
                -- , Benchmarks.LogicT
                -- , Benchmarks.ListT
                -- , Benchmarks.ListTransformer

  ghc-options: -O2 -Wall -with-rtsopts "-T" -fspec-constr-recursive=10
  if impl(ghc >= 8.0)
    ghc-options:    -Wcompat
                    -Wunrecognised-warning-flags
                    -Widentities
                    -Wincomplete-record-updates
                    -Wincomplete-uni-patterns
                    -Wredundant-constraints
                    -Wnoncanonical-monad-instances
                    -Wnoncanonical-monadfail-instances

  build-depends:
    streaming-benchmarks-indef,
    stream-vector,
    stream-streamly,
    stream-streaming,
    list-benchmarks-indef,
    list-streamly,
    list-vector,
    list-prelude,
    list-sequence,
    mtl                 >= 2     && < 2.3,
    random              >= 1.0   && < 2.0,
    transformers        >= 0.4   && < 0.6,
    template-haskell    >= 2.10  && < 2.15,
    bytestring          >= 0.9   && < 0.11,
    text                >= 1.0   && < 1.3,
    machines            >= 0.6.0 && < 0.7,
    pipes               >= 4     && < 4.4,
    conduit             >= 1.3   && < 1.4,
    drinkery            >= 0.3   && < 0.5,
    dlist               >= 0.7   && < 0.9,
    -- does not build with lts-11.0
    -- simple-conduit      >= 0.4.0 && < 0.7,
    -- list-transformer    >= 1.0.2 && < 1.1,
    -- list-t              >= 0.4.6 && < 1.1,
    -- logict              >= 0.5.0 && < 0.7,
  mixins:  streaming-benchmarks-indef (StreamBenchmark as Benchmarks.VectorMonadic)
             requires (Stream as StrVector)
         , streaming-benchmarks-indef (StreamBenchmark as Benchmarks.Streamly)
             requires (Stream as StrStreamly)
         , streaming-benchmarks-indef (StreamBenchmark as Benchmarks.Streaming)
             requires (Stream as StrStreaming)
         , list-benchmarks-indef (ListBenchmark as Benchmarks.StreamlyPure)
             requires (List as ListStreamly)
         , list-benchmarks-indef (ListBenchmark as Benchmarks.Vector)
             requires (List as ListVector)
         , list-benchmarks-indef (ListBenchmark as Benchmarks.List)
             requires (List as ListPrelude)
         , list-benchmarks-indef (ListBenchmark as Benchmarks.Sequence)
             requires (List as ListSequence)

executable makecharts
  default-language: Haskell2010
  default-extensions: OverloadedStrings
  hs-source-dirs:   .
  main-is: Charts.hs
  ghc-options: -Wall

  build-depends:
      base              == 4.*
    , bench-show        >= 0.2.1   && < 0.3
    , bytestring        >= 0.9     && < 0.11
    , Chart             >= 1.6     && < 2
    , Chart-diagrams    >= 1.6     && < 2
    , csv               >= 0.1     && < 0.2
    , directory         >= 1.2     && < 1.4
    , split             >= 0.2     && < 0.3
    , text              >= 1.1.1   && < 1.3
    , transformers      >= 0.4     && < 0.6
    , typed-process     >= 0.1.0.0 && < 0.3
    , getopt-generics   >= 0.11    && < 0.14
